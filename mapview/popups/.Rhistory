library(mapview)
mapview(breweries91, zcol = "founded")
leaflet() %>%
addTiles() %>%
addCircleMarkers(data = breweries91, popup = popupTable(breweries91, zcol = c("brewery", "village", "founded")))
library(sp)
library(lattice)
pnt <- data.frame(x = 174.764474, y = -36.877245)
coordinates(pnt) <- ~ x + y
proj4string(pnt) <- "+init=epsg:4326"
p2 <- levelplot(t(volcano), col.regions = terrain.colors(100))
mapview(pnt, popup = popupGraph(p2, width = 200, height = 300))
data(meuse)
coordinates(meuse) <- ~ x + y
proj4string(meuse) <- CRS("+init=epsg:28992")
## create plots with points colored according to feature id
p <- xyplot(copper ~ cadmium, data = meuse@data, col = "grey")
p <- mget(rep("p", length(meuse)))
clr <- rep("grey", length(meuse))
p <- lapply(1:length(p), function(i) {
clr[i] <- "red"
update(p[[i]], col = clr)
})
mapview(meuse, popup = popupGraph(p, type = "svg", width = 3, height = 2.5))
cube <- cubeView(kiliNDVI)
pop <- popupGraph(cube, type = "html", width = 300, height = 300)
ext <- viewExtent(kiliNDVI, fillOpacity = 0, opacity = 0, popup = pop)
ext + kiliNDVI[[1]]
library(raster)
kili_data <- system.file("extdata", "kiliNDVI.tif", package = "mapview")
kiliNDVI <- stack(kili_data)
cube <- cubeView(kiliNDVI)
pop <- popupGraph(cube, type = "html", width = 300, height = 300)
ext <- viewExtent(kiliNDVI, fillOpacity = 0, opacity = 0, popup = pop)
ext + kiliNDVI[[1]]
library(mapview)
mapview(breweries91, zcol = "founded")
leaflet() %>%
addTiles() %>%
addCircleMarkers(data = breweries91, popup = popupTable(breweries91, zcol = c("brewery", "village", "founded")))
library(sp)
library(lattice)
pnt <- data.frame(x = 174.764474, y = -36.877245)
coordinates(pnt) <- ~ x + y
proj4string(pnt) <- "+init=epsg:4326"
p2 <- levelplot(t(volcano), col.regions = terrain.colors(100))
mapview(pnt, popup = popupGraph(p2, width = 200, height = 300))
data(meuse)
coordinates(meuse) <- ~ x + y
proj4string(meuse) <- CRS("+init=epsg:28992")
## create plots with points colored according to feature id
p <- xyplot(copper ~ cadmium, data = meuse@data, col = "grey")
p <- mget(rep("p", length(meuse)))
clr <- rep("grey", length(meuse))
p <- lapply(1:length(p), function(i) {
clr[i] <- "red"
update(p[[i]], col = clr)
})
mapview(meuse, popup = popupGraph(p, type = "svg", width = 3, height = 2.5))
library(raster)
kili_data <- system.file("extdata", "kiliNDVI.tif", package = "mapview")
kiliNDVI <- stack(kili_data)
cube <- cubeView(kiliNDVI)
pop <- popupGraph(cube, type = "html", width = 300, height = 300)
ext <- viewExtent(kiliNDVI, fillOpacity = 0, opacity = 0, popup = pop)
ext + kiliNDVI[[1]]
library(sp)
library(jpeg)
library(raster)
aral <- data.frame(x = 59.250327,
y = 45.082526)
coordinates(aral) <- ~ x + y
proj4string(aral) <- "+init=epsg:4326"
web_img2000 <- "http://cdn.newsapi.com.au/image/v1/68565a36c0fccb1bc43c09d96e8fb029"
jpg2000 <- readJPEG(readBin(web_img2000, "raw", 1e6))
# Convert imagedata to raster
rst_blue2000 <- raster(jpg2000[, , 1])
rst_green2000 <- raster(jpg2000[, , 2])
rst_red2000 <- raster(jpg2000[, , 3])
img2000 <- brick(rst_red2000, rst_green2000, rst_blue2000)
web_img2013 <- "http://cdn.newsapi.com.au/image/v1/5707499d769db4b8ec76e8df61933f2a"
jpg2013 <- readJPEG(readBin(web_img2013, "raw", 1e6))
# Convert imagedata to raster
rst_blue2013 <- raster(jpg2013[, , 1])
rst_green2013 <- raster(jpg2013[, , 2])
rst_red2013 <- raster(jpg2013[, , 3])
img2013 <- brick(rst_red2013, rst_green2013, rst_blue2013)
slide <- slideView(img2000, img2013)
mapview(aral, map.types = "Esri.WorldImagery", popup = popupGraph(slide, type = "html"))
img <- system.file("img","Rlogo.png", package="png")
mapview(pnt, popup = popupImage(img))
img <- "https://upload.wikimedia.org/wikipedia/commons/thumb/6/62/Mount_Eden.jpg/640px-Mount_Eden.jpg"
mapview(pnt, map.types = "Esri.WorldImagery", popup = popupImage(img, src = "remote"))
mapview(pnt, popup = mapview:::popupIframe("https://www.youtube.com/embed/iApz08Bh53w?autoplay=1", width = 300, height = 225))
library(mapview)
mapview(breweries91, zcol = "founded")
leaflet() %>%
addTiles() %>%
addCircleMarkers(data = breweries91, popup = popupTable(breweries91, zcol = c("brewery", "village", "founded")))
library(sp)
library(lattice)
pnt <- data.frame(x = 174.764474, y = -36.877245)
coordinates(pnt) <- ~ x + y
proj4string(pnt) <- "+init=epsg:4326"
p2 <- levelplot(t(volcano), col.regions = terrain.colors(100))
mapview(pnt, popup = popupGraph(p2, width = 200, height = 300))
data(meuse)
coordinates(meuse) <- ~ x + y
proj4string(meuse) <- CRS("+init=epsg:28992")
## create plots with points colored according to feature id
p <- xyplot(copper ~ cadmium, data = meuse@data, col = "grey")
p <- mget(rep("p", length(meuse)))
clr <- rep("grey", length(meuse))
p <- lapply(1:length(p), function(i) {
clr[i] <- "red"
update(p[[i]], col = clr)
})
mapview(meuse, popup = popupGraph(p, type = "svg", width = 3, height = 2.5))
library(raster)
kili_data <- system.file("extdata", "kiliNDVI.tif", package = "mapview")
kiliNDVI <- stack(kili_data)
cube <- cubeView(kiliNDVI)
pop <- popupGraph(cube, type = "html", width = 300, height = 300)
ext <- viewExtent(kiliNDVI, fillOpacity = 0, opacity = 0, popup = pop)
ext + kiliNDVI[[1]]
library(sp)
library(jpeg)
library(raster)
aral <- data.frame(x = 59.250327,
y = 45.082526)
coordinates(aral) <- ~ x + y
proj4string(aral) <- "+init=epsg:4326"
web_img2000 <- "http://cdn.newsapi.com.au/image/v1/68565a36c0fccb1bc43c09d96e8fb029"
jpg2000 <- readJPEG(readBin(web_img2000, "raw", 1e6))
# Convert imagedata to raster
rst_blue2000 <- raster(jpg2000[, , 1])
rst_green2000 <- raster(jpg2000[, , 2])
rst_red2000 <- raster(jpg2000[, , 3])
img2000 <- brick(rst_red2000, rst_green2000, rst_blue2000)
web_img2013 <- "http://cdn.newsapi.com.au/image/v1/5707499d769db4b8ec76e8df61933f2a"
jpg2013 <- readJPEG(readBin(web_img2013, "raw", 1e6))
# Convert imagedata to raster
rst_blue2013 <- raster(jpg2013[, , 1])
rst_green2013 <- raster(jpg2013[, , 2])
rst_red2013 <- raster(jpg2013[, , 3])
img2013 <- brick(rst_red2013, rst_green2013, rst_blue2013)
slide <- slideView(img2000, img2013)
mapview(aral, map.types = "Esri.WorldImagery", popup = popupGraph(slide, type = "html"))
img <- system.file("img","Rlogo.png", package="png")
mapview(pnt, popup = popupImage(img))
img <- "https://upload.wikimedia.org/wikipedia/commons/thumb/6/62/Mount_Eden.jpg/640px-Mount_Eden.jpg"
mapview(pnt, map.types = "Esri.WorldImagery", popup = popupImage(img, src = "remote"))
mapview(pnt, popup = mapview:::popupIframe("https://www.youtube.com/embed/iApz08Bh53w?autoplay=1", width = 300, height = 225))
slideview
library(mapview)
mapview(breweries91, zcol = "founded")
leaflet() %>%
addTiles() %>%
addCircleMarkers(data = breweries91, popup = popupTable(breweries91, zcol = c("brewery", "village", "founded")))
library(sp)
library(lattice)
pnt <- data.frame(x = 174.764474, y = -36.877245)
coordinates(pnt) <- ~ x + y
proj4string(pnt) <- "+init=epsg:4326"
p2 <- levelplot(t(volcano), col.regions = terrain.colors(100))
mapview(pnt, popup = popupGraph(p2, width = 300, height = 300))
data(meuse)
coordinates(meuse) <- ~ x + y
proj4string(meuse) <- CRS("+init=epsg:28992")
## create plots with points colored according to feature id
p <- xyplot(copper ~ cadmium, data = meuse@data, col = "grey")
p <- mget(rep("p", length(meuse)))
clr <- rep("grey", length(meuse))
p <- lapply(1:length(p), function(i) {
clr[i] <- "red"
update(p[[i]], col = clr)
})
mapview(meuse, popup = popupGraph(p, type = "svg", width = 3, height = 2.5))
library(sp)
library(jpeg)
library(raster)
aral <- data.frame(x = 59.250327,
y = 45.082526)
coordinates(aral) <- ~ x + y
proj4string(aral) <- "+init=epsg:4326"
web_img2000 <- "http://cdn.newsapi.com.au/image/v1/68565a36c0fccb1bc43c09d96e8fb029"
jpg2000 <- readJPEG(readBin(web_img2000, "raw", 1e6))
# Convert imagedata to raster
rst_blue2000 <- raster(jpg2000[, , 1])
rst_green2000 <- raster(jpg2000[, , 2])
rst_red2000 <- raster(jpg2000[, , 3])
img2000 <- brick(rst_red2000, rst_green2000, rst_blue2000)
web_img2013 <- "http://cdn.newsapi.com.au/image/v1/5707499d769db4b8ec76e8df61933f2a"
jpg2013 <- readJPEG(readBin(web_img2013, "raw", 1e6))
# Convert imagedata to raster
rst_blue2013 <- raster(jpg2013[, , 1])
rst_green2013 <- raster(jpg2013[, , 2])
rst_red2013 <- raster(jpg2013[, , 3])
img2013 <- brick(rst_red2013, rst_green2013, rst_blue2013)
slide <- slideView(img2000, img2013)
mapview(aral, map.types = "Esri.WorldImagery", popup = popupGraph(slide, type = "html"))
img <- system.file("img","Rlogo.png", package="png")
mapview(pnt, popup = popupImage(img))
img <- "https://upload.wikimedia.org/wikipedia/commons/thumb/6/62/Mount_Eden.jpg/640px-Mount_Eden.jpg"
mapview(pnt, map.types = "Esri.WorldImagery", popup = popupImage(img, src = "remote"))
mapview(pnt, popup = mapview:::popupIframe("https://www.youtube.com/embed/iApz08Bh53w?autoplay=1", width = 300, height = 225))
packageVersion("mapview")
mapviewGetOption("basemaps")
?mapview
